% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getModelFit.R
\name{getModelFit}
\alias{getModelFit}
\title{Model comparison criteria}
\usage{
getModelFit(
  formula,
  data,
  frailty = c("correlated", "independent", "shared", "none"),
  mcmc_sigma,
  mcmc_kappa,
  mcmc_gamma = NULL,
  mcmc_theta = NULL,
  x0 = 10,
  nu = 3.9,
  mcsize = 500,
  setSeed = TRUE
)
}
\arguments{
\item{formula}{A formula object, with the response on the left
of a "~" operator, and the predictors on the right. The response must be
a recurrent event object as returned by function Recur.}

\item{data}{A data frame includes all the variables in "formula".
Data frame should not include intercept.}

\item{frailty}{Frailty model type, \code{"correlated"}, \code{"independent"},
\code{"shared"} and \code{"none"}.}

\item{mcmc_sigma}{MCMC samples for coefficients in sigma model,
which is a matrix.}

\item{mcmc_kappa}{MCMC samples for coefficients in kappa model,
which is a matrix.}

\item{mcmc_gamma}{MCMC samples for coefficients of frailty,
which is a matrix. If using the model with this parameter,
user should provide MCMC samples. Default is NULL.}

\item{mcmc_theta}{MCMC samples for variance parameter of frailty,
which is a matrix. If using the model with this parameter,
user should provide MCMC samples. Default is NULL.}

\item{x0}{The starting point of Brownian motion, which is a known
parameter in model.}

\item{nu}{The lower boundary of Brownian motion, which is a known
parameter in model.}

\item{mcsize}{Monte Carlo approximation sample size. Default is 500.}

\item{setSeed}{Logical or numeric argument. Default is TRUE. The random
seed for Monte Carlo samples.}
}
\description{
The function getModelFit calculates the
Deviance Information Criterion (DIC) and
the Logarithm of the Pseudo-Marginal Likelihood (LPML).
The DIC and LPML are calculated based on observed likelihood.
Monte Carlo integration is used for approximating the observed likelihood.
}
\examples{
\dontrun{
# using the MCMC from fitFHTRBM function
ret <- getModelFit(Recur(time = time, id = id, event = event) ~ x1 + x2|x1 + x2,
                   data = simuEvtDat,
                   frailty = "independent",
                   mcmc_sigma = mcmc[, c(4:6)],
                   mcmc_kappa = mcmc[, c(1:3)],
                   mcmc_theta = mcmc[, c(7:8)])
}

}
